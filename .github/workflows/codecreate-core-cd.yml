name: codecreate-core-cd

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'lib/CodeCreate.Core/**'
      - 'tests/CodeCreate.Core.Tests.Unit/**'

env:
  DLL_PATH: 'lib/CodeCreate.Core/bin/Release'
  LIBRARY_PATH: 'lib/CodeCreate.Core/CodeCreate.Core.csproj'
  TESTS_PATH: 'tests/CodeCreate.Core.Tests.Unit/CodeCreate.Core.Tests.Unit.csproj'
  TESTS_RESULTS_PATH: 'tests/CodeCreate.Core.Tests.Unit/TestResults'
  ARTIFACT_NAME: 'codeCreatePackage'

jobs:
  buildPackage:
    name: buildPackage
    runs-on: ubuntu-latest 
    outputs: 
      Version: ${{ steps.gitversion.outputs.SemVer }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }} 

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # fetch-depth is needed for GitVersion

    - name: buildPackage
      id: buildPackage
      uses: "./.github/workflows/templates/buildPackage" # Just need to pass the path from action
      # Defining the variables required in our action
      with:
        libraryPath: ${{ env.LIBRARY_PATH }}
        testsPath: ${{ env.TESTS_PATH }}
        testsResultsPath: ${{ env.TESTS_RESULTS_PATH }}
        artifactName: ${{ env.ARTIFACT_NAME }}
        dllPath: ${{ env.DLL_PATH }}
        
  releasePackage:
    name: releasePackage
    runs-on: ubuntu-latest    
    needs: buildPackage
    if: github.ref == 'refs/heads/main' # Only run job if on the main branch   
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: releasePackage
      uses: "./.github/workflows/templates/releasePackage" # Just need to pass the path from action
       # Defining the variables required in our action
      with:
        username: ${{ secrets.CODECREATE_GH_PACKAGE_SOURCE_USERNAME }}
        password: ${{ secrets.CODECREATE_GH_PACKAGE_SOURCE_PASSWORD }}
        artifactName: ${{ env.ARTIFACT_NAME }}
        commitsSinceVersionSource: ${{ steps.buildPackage.outputs.commitsSinceVersionSource }}
        buildPackageVersion: ${{ steps.buildPackage.outputs.buildPackageVersion }}