name: packPackage

description: Build code, run tests and pack the library code into a nuget package

inputs:
  libraryPath:
    description: 'The path to the library .csproj file'
    required: true
  testsPath:
    description: 'The path to the unit tests .csproj file guarding the library'
    required: false
  testsResultsPath:
    description: 'The path to the unit tests results folder'
    required: false
  artifactName:
    description: 'The build artifact name'
    required: true
  dllPath:
    description: 'The path to the release version of the dll'
    required: true
    
runs:
  using: "composite"
  # Defining the action steps
  steps:
    - name: Use .NET Core sdk 7.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.x

    - name: 'Build project'
      run: dotnet build ${{ inputs.libraryPath }} --configuration Release
      shell: bash

    - name: Run unit tests
      if: "${{ inputs.testsPath != '' }}"
      run: dotnet test ${{ inputs.testsPath }} --configuration release --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura
      continue-on-error: false
      shell: bash

    - name: Publish Code Coverage Report
      if: "${{ inputs.testsPath != '' }}"
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage
        path: ${{ inputs.testsResultsPath }}/*/coverage.cobertura.xml

    - name: Build and Pack NuGet package
      run: dotnet pack ${{ inputs.libraryPath }} -c Release
      shell: bash

    - name: Upload NuGet package to GitHub
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.artifactName }}
        path: ${{ inputs.dllPath }}